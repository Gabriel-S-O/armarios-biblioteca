/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifpr.paranavai.armarios.view;

import br.edu.ifpr.paranavai.armarios.controller.ArmarioController;
import br.edu.ifpr.paranavai.armarios.dao.ArmarioDao;
import br.edu.ifpr.paranavai.armarios.dao.EstudanteDao;
import br.edu.ifpr.paranavai.armarios.entity.Armario;
import br.edu.ifpr.paranavai.armarios.entity.Estudante;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class EditorHomeBibliotecarioUI extends javax.swing.JFrame {
    
    private List<Estudante> listaEstudante = new ArrayList<>();
    private List<Armario> listaArmario = new ArrayList<>();

    /**
     * Creates new form EditorHomeBibliotecario
     */
    public EditorHomeBibliotecarioUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.buscaEstudantes();
        this.buscaArmarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        fields = new javax.swing.JPanel();
        inputBuscaEstudante = new javax.swing.JTextField();
        buttonBuscarEstudante = new javax.swing.JButton();
        table = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaEstudante = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        fields1 = new javax.swing.JPanel();
        inputBuscarArmarios = new javax.swing.JTextField();
        buttonBuscarArmarios = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaArmario = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.BorderLayout());

        inputBuscaEstudante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBuscaEstudanteActionPerformed(evt);
            }
        });

        buttonBuscarEstudante.setText("Buscar");
        buttonBuscarEstudante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarEstudanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fieldsLayout = new javax.swing.GroupLayout(fields);
        fields.setLayout(fieldsLayout);
        fieldsLayout.setHorizontalGroup(
            fieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(inputBuscaEstudante, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonBuscarEstudante)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fieldsLayout.setVerticalGroup(
            fieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(fieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputBuscaEstudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarEstudante))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.add(fields, java.awt.BorderLayout.PAGE_START);

        table.setLayout(new java.awt.BorderLayout());

        tabelaEstudante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "RA", "Nome", "CPF", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabelaEstudante);

        table.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        jPanel2.add(table, java.awt.BorderLayout.CENTER);

        jTabbedPane2.addTab("Estudantes", jPanel2);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        inputBuscarArmarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBuscarArmariosActionPerformed(evt);
            }
        });

        buttonBuscarArmarios.setText("Buscar");
        buttonBuscarArmarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarArmariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fields1Layout = new javax.swing.GroupLayout(fields1);
        fields1.setLayout(fields1Layout);
        fields1Layout.setHorizontalGroup(
            fields1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fields1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(inputBuscarArmarios, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonBuscarArmarios)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fields1Layout.setVerticalGroup(
            fields1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fields1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(fields1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputBuscarArmarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarArmarios))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel3.add(fields1, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new java.awt.BorderLayout());

        tabelaArmario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Numero", "Ativo", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaArmario);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jButton1.setText("Alterar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.setText("               ");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(288, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(12, 12, 12)
                        .addComponent(jButton2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        jTabbedPane2.addTab("Armários", jPanel1);

        getContentPane().add(jTabbedPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputBuscaEstudanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBuscaEstudanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputBuscaEstudanteActionPerformed

    private void buttonBuscarEstudanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarEstudanteActionPerformed
        List<Estudante> listaEstudanteFiltrada = this.listaEstudante.stream()
                .filter(l -> l.getNome().toUpperCase()
                .contains(this.inputBuscaEstudante.getText().toUpperCase())
                || l.getCpf()
                        .contains(this.inputBuscaEstudante.getText())
                || l.getRa()
                        .contains(this.inputBuscaEstudante.getText())
                || l.getEmail().toUpperCase()
                        .contains(this.inputBuscaEstudante.getText().toUpperCase()))
                .collect(Collectors.toList());

        this.setDataTableEstudante(listaEstudanteFiltrada);
    }//GEN-LAST:event_buttonBuscarEstudanteActionPerformed

    private void inputBuscarArmariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBuscarArmariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputBuscarArmariosActionPerformed

    private void buttonBuscarArmariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarArmariosActionPerformed
        List<Armario> listaArmarioFiltrada = this.listaArmario.stream()
                .filter(l -> l.getNumero().toString()
                .contains(this.inputBuscarArmarios.getText().toUpperCase())
                || l.getNumero().toString()
                        .contains(this.inputBuscarArmarios.getText())
                || l.getObservacoes()
                        .contains(this.inputBuscarArmarios.getText().toUpperCase()))
                .collect(Collectors.toList());

        this.setDataTableArmario(listaArmarioFiltrada);
    }//GEN-LAST:event_buttonBuscarArmariosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ArmarioController armarioController = new ArmarioController();
        if(this.jTextField2 != null){
          int numeroArmario = Integer.valueOf(this.jTextField2.getText());
          armarioController.apagarArmario(numeroArmario);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorHomeBibliotecarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorHomeBibliotecarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorHomeBibliotecarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorHomeBibliotecarioUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorHomeBibliotecarioUI().setVisible(true);
            }
        });
    }

    public void setDataTableEstudante(List<Estudante> listaEstudantes) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) tabelaEstudante.getModel();

        while (defaultTableModel.getRowCount() != 0) {
            defaultTableModel.removeRow(0);
        }

        for (Estudante estudante : listaEstudantes) {
            Object[] dataLine = new Object[4];
            dataLine[0] = estudante.getNome();
            dataLine[1] = estudante.getCpf();
            dataLine[2] = estudante.getRa();
            dataLine[3] = estudante.getEmail();

            defaultTableModel.addRow(dataLine);
        }
    }

    public void buscaEstudantes() {
        this.listaEstudante = new EstudanteDao().findAll();
        this.setDataTableEstudante(listaEstudante);
    }
    
    public void setDataTableArmario(List<Armario> listaArmarios) {
        DefaultTableModel defaultTableModel = (DefaultTableModel) tabelaArmario.getModel();
        
        while (defaultTableModel.getRowCount() != 0) {
            defaultTableModel.removeRow(0);
        }
        
        for (Armario armario : listaArmarios) {
            Object[] dataLine = new Object[4];
            dataLine[0] = armario.getNumero();
            dataLine[1] = armario.isAtivo();
            dataLine[2] = armario.getObservacoes();

            defaultTableModel.addRow(dataLine);
        }
    }
    
    public void buscaArmarios() {
        this.listaArmario = new ArmarioDao().findAll();
        this.setDataTableArmario(listaArmario);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscarArmarios;
    private javax.swing.JButton buttonBuscarEstudante;
    private javax.swing.JPanel fields;
    private javax.swing.JPanel fields1;
    private javax.swing.JTextField inputBuscaEstudante;
    private javax.swing.JTextField inputBuscarArmarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tabelaArmario;
    private javax.swing.JTable tabelaEstudante;
    private javax.swing.JPanel table;
    // End of variables declaration//GEN-END:variables
}
